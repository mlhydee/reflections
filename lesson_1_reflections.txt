How did viewing a difference (diff -u) between two versions of a file help you see the bug that was introduced?

It helped because you were able to compare visually the differences between the old and the new version of the file.
Diff -u automatically pointed out areas in the files that were different so that the user does not have to scan
the code manually. This cuts down time.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It means that if your current file is accidentally deleted you will have backups. It means that if bugs are introduced
during programming, older version can be checked to before the bug was introduced and then compared to see what might
have caused the bug. It saves a lot of time and effort that might be wasted.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having
versions automatically saved, like Google Docs does?

Pros: Just the right amount of commits can be made, you decide if they are logical. You ensure that a change is complete
and working right. Comments can be added.
Cons: User might forget to save after changes.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others,
like Google Docs, treat each file separately?

Because a user working with git is more likely to be working with code. Programming often connects files together (i.e. html/css)
and these are likely to be changed together (they affect one another). A user working with Google Docs is more likely to be writing
a word document etc, and therefor won't need to save multiple files in one commit.

How can you use the commands git log and git diff to view the history of files?

Git log can be used to see all the commits in the repo, and git diff can be used to compare differences between specified files.

How might using version control make you more confident to make changes that could break something?

Because as long as you have saved logical commits there will always be a backup to checkout if something goes wrong.
